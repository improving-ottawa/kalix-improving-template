syntax = "proto3";

package com.example.service3.api;

import "com/example/common/money.proto";
import "com/example/common/timestamp.proto";
import "com/example/common/domain/line_item.proto";
import "com/example/service3/domain/cart_domain.proto";

import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "scalapb/scalapb.proto";
import "validate/validate.proto";

// The shopping cart commands

message CreateShoppingCart {
  string user_id = 1 [(validate.rules).string.uuid = true];
}

message AddLineItem {
  string cart_id = 1 [(kalix.field).entity_key = true];

  common.domain.LineItem line_item = 2 [
    (scalapb.field).required = true,
    (validate.rules).message.required = true
  ];
}

message RemoveLineItem {
  string cart_id = 1 [(kalix.field).entity_key = true];

  common.domain.LineItem line_item = 2 [
    (scalapb.field).required = true,
    (validate.rules).message.required = true
  ];
}

message GetShoppingCart {
  string cart_id = 1 [(kalix.field).entity_key = true];
}

message AbandonShoppingCart {
  string cart_id = 1 [(kalix.field).entity_key = true];
}

message StartCheckout {
  string cart_id = 1 [(kalix.field).entity_key = true];
}

message CompleteCheckout {
  string cart_id = 1 [(kalix.field).entity_key = true];
}

message ShoppingCartId {
  string id = 1 [(validate.rules).string.uuid = true];
}

service ShoppingCarts {
  option (kalix.codegen) = {
    action: {
      name: "com.example.service3.api.ShoppingCartsService"
    }
  };

  rpc GetCart(GetShoppingCart) returns (domain.Cart);

  rpc GetCartDetails(GetShoppingCart) returns (domain.CartDetails);

  rpc CreateCart(CreateShoppingCart) returns (ShoppingCartId);

  rpc AddItemToCart(AddLineItem) returns (google.protobuf.Empty);

  rpc RemoveItemFromCart(RemoveLineItem) returns (google.protobuf.Empty);

  rpc StartCartCheckout(StartCheckout) returns (domain.CartDetails);

  rpc CompleteCartCheckout(CompleteCheckout) returns (google.protobuf.Empty);
}
