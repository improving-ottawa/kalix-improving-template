syntax = "proto3";

package com.example.gateway.api;

import "com/example/common/domain/product.proto";
import "com/example/bounded-context/domain/service1_domain.proto";
import "com/example/bounded-context/domain/service2_domain.proto";
import "com/example/service3/domain/service3_domain.proto";
import "com/example/service3/api/cart_api.proto";
import "com/example/service3/domain/cart_domain.proto";
import "com/example/service3/api/order_api.proto";
import "com/example/service3/domain/order_domain.proto";
import "com/example/service3/api/product_service.proto";

import "com/example/gateway/api/authentication_service.proto";
import "com/example/gateway/api/user_api.proto";
import "com/example/gateway/domain/user_domain.proto";
import "com/example/gateway/messages/online_check_messages.proto";

import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

service Gateway {
    option (kalix.codegen) = {
        action: {
            name: "com.example.gateway.api.GatewayProxy"
        }
    };

    /**************************
     * Unauthenticated routes *
     ***************************/

    // Simple online check
    rpc OnlineCheck (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            // The HTTP/JSON endpoint for this RPC
            get: "/online"
        };
    }

    // Health check: checks that all backend-service (and implicitly the gateway) are online and available.
    rpc HealthCheck (google.protobuf.Empty) returns (HealthCheckResponse) {
        option (google.api.http) = {
            // The HTTP/JSON endpoint for this RPC
            get: "/health-check"
        };
    }

    // Login related routes

    rpc CompleteOIDCLogin(api.CompleteOIDCLoginRequest) returns (api.LoginResponse);

    rpc PasswordLogin(api.PasswordAuthenticationRequest) returns (api.LoginResponse);

    // User related routes

    rpc GetUserLoginInfo(api.UserEmailRequest) returns (api.UserLoginInfoResponse);

    rpc RegisterNewLocalUser(api.RegisterLocalUserRequest) returns (api.UserResponse);

    /************************
     * Authenticated routes *
     ************************/

    // User related routes

    rpc GetUserInfo(api.GetUserRequest) returns (api.UserResponse);

    rpc UpdateLocalUserIdentity(api.UpdateLocalIdentityRequest) returns (api.UserResponse);

    rpc UpdateUserRoles(api.UpdateUserRolesRequest) returns (api.UserResponse);

    // Shopping cart routes

    rpc CreateCart(service3.api.CreateShoppingCart) returns (service3.api.ShoppingCartId);

    rpc GetCart(service3.api.GetShoppingCart) returns (service3.domain.Cart);

    rpc AddItemToCart(service3.api.AddLineItem) returns (google.protobuf.Empty);

    rpc RemoveItemFromCart(service3.api.RemoveLineItem) returns (google.protobuf.Empty);

    rpc StartCartCheckout(service3.api.StartCheckout) returns (service3.domain.CartDetails);

    rpc CompleteCartCheckout(service3.api.CompleteCheckout) returns (google.protobuf.Empty);

    // Order routes

    rpc CreateOrderFromCart(service3.api.OrderFromCart) returns (service3.api.OrderConfirmation);

    rpc GetOrderById(service3.api.OrderById) returns (service3.domain.Order);

    // Product routes

    rpc GetProducts(google.protobuf.Empty) returns (service3.api.ProductList);

    rpc GetProductBySKU(service3.api.SingleProductRequest) returns (common.domain.Product);

    rpc GetProductsBySKU(service3.api.MultipleProductsRequest) returns (service3.api.ProductList);

}
