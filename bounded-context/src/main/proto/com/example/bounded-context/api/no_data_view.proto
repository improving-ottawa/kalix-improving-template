syntax = "proto3";

package com.example.boundedContext.api;

import "com/example/common/rrule.proto";
import "com/example/common/domain/uniqueid.proto";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

// *********
// * Views *
// *********

service NoData1 {
    option (kalix.codegen) = {
        view: {}
    };

    rpc ProcessNothing (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (kalix.method).eventing.in = {
            event_sourced_entity: "bounded-context"
        };

        option (kalix.method).view.update = {
            table: "nothing"
            transform_updates: true
        };
    }

    // Single query (only one allowed per view!!)

    rpc GetNothing (google.protobuf.Empty) returns (stream google.protobuf.Empty) {
        option (kalix.method).view.query = {
            query: ""
        };
    }

}
