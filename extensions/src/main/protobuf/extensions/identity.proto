syntax = "proto3";

package extensions;

import "scalapb/scalapb.proto";
import "validate/validate.proto";

option java_package = "com.improving.extensions.identity";

option (scalapb.options) = {
  scope: FILE
  flat_package: true
  single_file: true
  java_conversions: false
  import: "com.improving.extensions.identity.ScalaPBTypeMappers._"
};

// Note: If you want to use OIDC in your Kalix application, you will need the "oidc" extension module as well.
message CredentialsOIDC {
  string provider_name = 1 [
    (validate.rules).string.min_len = 3,
    (scalapb.field).no_default_value_in_constructor = true
  ];

  string linked_identity_subject = 2 [
    (validate.rules).string.min_len = 3,
    (scalapb.field).no_default_value_in_constructor = true
  ];
}

// Use this if you are building a Kalix application which will only utilize username/email and password based authentication.
message CredentialsPassword {
  bytes salt = 1 [(validate.rules).bytes.min_len = 4];
  bytes password = 2 [(validate.rules).bytes.min_len = 8];
}

message CredentialTypeProto {
  option (scalapb.message).companion_extends = "com.improving.extensions.identity.CredentialTypeProtoCompanion";
  option (scalapb.message).type = "com.improving.extensions.identity.CredentialType";

  oneof login_type {
    CredentialsOIDC oidc = 1;
    CredentialsPassword password = 2;
  }
}

// A user identity record, which can be used (as-is) as state for some "user" Kalix entity.
// Preconfigured to be more Scala friendly/ergonomic.
message UserIdentity {

  // The identity's (universally unique) identifier
  string id = 1 [
    (validate.rules).string.uuid = true,
    (scalapb.field).no_default_value_in_constructor = true,
    (scalapb.field).type = "java.util.UUID"
  ];

  // The identity's username / display name
  string name = 2 [
    (validate.rules).string.min_len = 3,
    (validate.rules).string.max_len = 256,
    (scalapb.field).no_default_value_in_constructor = true
  ];

  // The identity's credentials type
  CredentialTypeProto credential_type = 3 [
    (validate.rules).message.required = true,
    (scalapb.field).required = true,
    (scalapb.field).no_default_value_in_constructor = true,
    (scalapb.field).type = "com.improving.extensions.identity.CredentialType"
  ];

  // The user's domain (optional)
  optional string domain = 4;

  // The identity's assigned (RBAC) roles
  repeated string roles = 5 [(scalapb.field).collection_type = "scala.collection.immutable.Set"];

  // The identity's (explicitly assigned) (RBAC) permissions
  repeated string explicit_permissions = 6 [(scalapb.field).collection_type = "scala.collection.immutable.Set"];

  // The identity's email address
  string email_address = 7;

  // The last/family name of this identity (optional)
  optional string familyName = 8;

  // The first/given name of this identity (optional)
  optional string givenName = 9;

  // The middle name of this identity (optional)
  optional string middleName = 10;

  // Reserved for future data
  reserved 11, 12, 13, 14;

  // The last timestamp this identity was updated (optional)
  optional uint64 last_updated_timestamp = 15 [(scalapb.field).type = "java.time.Instant"];
}
